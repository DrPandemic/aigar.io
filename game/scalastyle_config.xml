<scalastyle commentFilter="enabled">
 <name>Scalastyle standard configuration</name>
 <check level="warning" class="org.scalastyle.file.FileTabChecker" enabled="true"></check>
 <check level="warning" class="org.scalastyle.scalariform.SpacesAfterPlusChecker" enabled="true"></check>
 <check level="warning" class="org.scalastyle.scalariform.SpacesBeforePlusChecker" enabled="true"></check>
 <check level="warning" class="org.scalastyle.file.WhitespaceEndOfLineChecker" enabled="true"></check>
 <check level="warning" class="org.scalastyle.file.FileLineLengthChecker" enabled="true">
  <parameters>
   <parameter name="maxLineLength"><![CDATA[160]]></parameter>
   <parameter name="tabSize"><![CDATA[2]]></parameter>
  </parameters>
 </check>
 <check level="warning" class="org.scalastyle.scalariform.ClassNamesChecker" enabled="true">
  <parameters>
   <parameter name="regex"><![CDATA[[A-Z][A-Za-z]*]]></parameter>
  </parameters>
 </check>
 <check level="warning" class="org.scalastyle.scalariform.ObjectNamesChecker" enabled="true">
  <parameters>
   <parameter name="regex"><![CDATA[[A-Z][A-Za-z]*]]></parameter>
  </parameters>
 </check>
 <check level="warning" class="org.scalastyle.scalariform.PackageObjectNamesChecker" enabled="true">
  <parameters>
   <parameter name="regex"><![CDATA[^[a-z][A-Za-z]*$]]></parameter>
  </parameters>
 </check>
 <check level="warning" class="org.scalastyle.scalariform.ParameterNumberChecker" enabled="true">
  <parameters>
   <parameter name="maxParameters"><![CDATA[8]]></parameter>
  </parameters>
 </check>
 <check level="warning" class="org.scalastyle.scalariform.MagicNumberChecker" enabled="true">
  <parameters>
   <parameter name="ignore"><![CDATA[-1,0,1,2,3]]></parameter>
  </parameters>
 </check>
 <check level="warning" class="org.scalastyle.scalariform.ReturnChecker" enabled="false"></check>
 <check level="warning" class="org.scalastyle.scalariform.NullChecker" enabled="false"></check>
 <check level="warning" class="org.scalastyle.scalariform.NoCloneChecker" enabled="false"></check>
 <check level="warning" class="org.scalastyle.scalariform.NoFinalizeChecker" enabled="true"></check>
 <check level="warning" class="org.scalastyle.scalariform.CovariantEqualsChecker" enabled="true"></check>
 <check level="warning" class="org.scalastyle.scalariform.StructuralTypeChecker" enabled="true"></check>
 <check level="warning" class="org.scalastyle.file.RegexChecker" enabled="true">
  <parameters>
   <parameter name="regex"><![CDATA[println]]></parameter>
  </parameters>
 </check>
 <check level="warning" class="org.scalastyle.scalariform.UppercaseLChecker" enabled="true"></check>
 <check level="warning" class="org.scalastyle.scalariform.SimplifyBooleanExpressionChecker" enabled="false"></check>
 <check level="warning" class="org.scalastyle.scalariform.IfBraceChecker" enabled="true">
  <parameters>
   <parameter name="singleLineAllowed"><![CDATA[true]]></parameter>
   <parameter name="doubleLineAllowed"><![CDATA[false]]></parameter>
  </parameters>
 </check>
 <check level="warning" class="org.scalastyle.scalariform.MethodLengthChecker" enabled="true"></check>
 <check level="warning" class="org.scalastyle.scalariform.MethodNamesChecker" enabled="true">
  <parameters>
   <parameter name="regex"><![CDATA[^[a-z][A-Za-z0-9]*$]]></parameter>
  </parameters>
 </check>
 <check level="warning" class="org.scalastyle.scalariform.PublicMethodsHaveTypeChecker" enabled="true"></check>
 <check level="warning" class="org.scalastyle.file.NewLineAtEofChecker" enabled="true"></check>
 <check level="warning" class="org.scalastyle.file.NoNewLineAtEofChecker" enabled="false"></check>
 <check level="warning" class="org.scalastyle.scalariform.WhileChecker" enabled="false"></check>
 <check level="warning" class="org.scalastyle.scalariform.VarFieldChecker" enabled="false"></check>
 <check level="warning" class="org.scalastyle.scalariform.VarLocalChecker" enabled="false"></check>
 <check level="warning" class="org.scalastyle.scalariform.RedundantIfChecker" enabled="false"></check>
 <check level="warning" class="org.scalastyle.scalariform.TokenChecker" enabled="true">
  <parameters>
   <parameter name="regex"><![CDATA[println]]></parameter>
  </parameters>
 </check>
 <check level="warning" class="org.scalastyle.scalariform.DeprecatedJavaChecker" enabled="true"></check>
 <check level="warning" class="org.scalastyle.scalariform.EmptyClassChecker" enabled="true"></check>
 <check level="warning" class="org.scalastyle.scalariform.ClassTypeParameterChecker" enabled="true">
  <parameters>
   <parameter name="regex"><![CDATA[^[A-Z_]$]]></parameter>
  </parameters>
 </check>
 <check level="warning" class="org.scalastyle.scalariform.UnderscoreImportChecker" enabled="true"></check>
 <check level="warning" class="org.scalastyle.scalariform.LowercasePatternMatchChecker" enabled="true"></check>
 <check level="warning" class="org.scalastyle.scalariform.MultipleStringLiteralsChecker" enabled="true">
  <parameters>
   <parameter name="allowed"><![CDATA[2]]></parameter>
   <parameter name="ignoreRegex"><![CDATA[^""$]]></parameter>
  </parameters>
 </check>
 <check level="warning" class="org.scalastyle.scalariform.ImportGroupingChecker" enabled="true"></check>

 <!-- To ensure a single space after those tokens. (eg. if (true)return // bad syntax) -->
 <check enabled="true" class="org.scalastyle.file.RegexChecker" level="warning">
   <parameters>
     <parameter name="regex">\b(if|else|do|while|for|match|try|catch|finally|=>)\b\S</parameter>
   </parameters>
   <customMessage>No space after token</customMessage>
 </check>
 <check enabled="true" class="org.scalastyle.file.RegexChecker" level="warning">
   <parameters>
     <parameter name="regex">=[^\s>=]</parameter>
   </parameters>
   <customMessage>No space after =</customMessage>
 </check>
 <check level="warning" class="org.scalastyle.scalariform.EnsureSingleSpaceBeforeTokenChecker" enabled="true">
   <parameters>
     <parameter name="tokens">ARROW, EQUALS, IF, ELSE, TRY, CATCH, FINALLY, LARROW, RARROW</parameter>
   </parameters>
 </check>

 <check level="warning" class="org.scalastyle.scalariform.SpaceAfterCommentStartChecker" enabled="true"></check>

 <check enabled="true" class="org.scalastyle.file.RegexChecker" level="warning">
  <parameters>
    <parameter name="regex">(?m)^\s*$(\r|)\n^\s*$(\r|)\n</parameter>
    <parameter name="line">false</parameter>
  </parameters>
  <customMessage>No double blank lines</customMessage>
 </check>

 <check enabled="true" class="org.scalastyle.scalariform.DisallowSpaceAfterTokenChecker" level="warning">
   <parameters>
     <parameter name="tokens">LPAREN</parameter>
   </parameters>
 </check>
 <check enabled="true" class="org.scalastyle.scalariform.DisallowSpaceBeforeTokenChecker" level="warning">
   <parameters>
     <parameter name="tokens">COLON, COMMA, RPAREN</parameter>
   </parameters>
 </check>

 <check level="warning" class="org.scalastyle.scalariform.ImportOrderChecker" enabled="true">
   <parameters>
     <parameter name="groups">language, 3rdParty,aigario</parameter>
     <parameter name="group.language">(scala|javax?)\..*</parameter>
     <parameter name="group.3rdParty">(?!io\.aigar\.).*</parameter>
     <parameter name="group.aigario">io\.aigar\..*</parameter>
   </parameters>
 </check>
</scalastyle>
